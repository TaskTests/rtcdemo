{"version":3,"sources":["components/HomePage.js","components/WhiteBoard.js","components/CreateRoom.js","components/JoinRoom.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","Fragment","to","uuid","Button","size","variant","color","WhiteBoard","canvas","useRef","ctx","flag","prevX","currX","prevY","currY","x","y","findxy","res","e","clientX","current","offsetLeft","clientY","offsetTop","beginPath","fillStyle","fillRect","closePath","moveTo","lineTo","strokeStyle","lineWidth","stroke","useEffect","width","window","innerWidth","height","innerHeight","getContext","addEventListener","Box","className","bgcolor","position","right","margin","Tooltip","title","IconButton","aria-label","component","onClick","clearRect","ref","CreateRoom","roomId","match","params","localVideoRef","localStreamRef","screenShareStreamRef","socketRef","peerRef","senders","useDynamicRefs","getRef","setRef","React","useState","audio","setAudio","video","setVideo","onLive","setOnLive","isShowingVideo","setIsShowingVideo","setNewJoinee","navigator","mediaDevices","getUserMedia","then","stream","srcObject","catch","err","alert","handleReceiveOffer","joineeData","peer","userID","RTCPeerConnection","iceServers","urls","onicecandidate","joinee","candidate","emit","handleIceCandidate","ontrack","streams","handleTrack","onsignalingstatechange","console","log","target","signalingState","onnegotiationneeded","handleNegotiation","createPeer","from","desc","RTCSessionDescription","sdp","setRemoteDescription","getTracks","forEach","track","mTrack","addTrack","kind","push","replaceTrack","createAnswer","answer","setLocalDescription","localDescription","handleMediaChange","event","name","getAudioTracks","enabled","checked","getVideoTracks","display","flexDirection","flexGrow","paddingBottom","hidden","style","overflowY","muted","autoPlay","map","item","key","bottom","padding","alignItems","justifyContent","Checkbox","icon","checkedIcon","onChange","toggle","getDisplayMedia","cursor","screenTrack","onended","sender","length","disconnect","io","connect","on","data","RTCIceCandidate","val","peers","filter","addIceCandidate","joineeId","JoinRoom","remoteVideoRef","haveRemoteStream","setHaveRemoteStream","max","socketConfig","getOffer","handleReceiveAnswer","hostID","host","hostid","createOffer","offer","hostData","handleChange","Loading","CircularProgress","inputProps","App","path","exact","Boolean","location","hostname","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.2b6bb82d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { v4 as uuid } from 'uuid';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst HomePage = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <Link to={\"/room/\"+uuid()}>\r\n            <Button size=\"small\" variant=\"outlined\" color=\"primary\">Start Class</Button>\r\n            </Link>\r\n        </React.Fragment>\r\n    );\r\n}\r\nexport default HomePage;","import { Box, IconButton, Tooltip } from \"@material-ui/core\";\r\nimport React, { useEffect, useRef } from \"react\";\r\nimport { BiEraser ,BiPen} from \"react-icons/bi\";\r\nimport { MdClear } from \"react-icons/md\"; \r\nimport \"../css/WhiteBoard.css\";\r\n\r\nexport default function WhiteBoard() {\r\n  const canvas = useRef();\r\n  const ctx = useRef();\r\n\r\n  var flag = false,\r\n    prevX = 0,\r\n    currX = 0,\r\n    prevY = 0,\r\n    currY = 0,\r\n    dot_flag = false;\r\n\r\n  var x = \"black\",y = 2;\r\n\r\n  ////////////////////////////////////INITIAL FUNCTIONS////////////////////////////////////////////////////\r\n  useEffect(() => {\r\n    canvas.current.width = window.innerWidth;\r\n    canvas.current.height = window.innerHeight;\r\n    ctx.current = canvas.current.getContext(\"2d\");\r\n    canvas.current.addEventListener(\"mousemove\",(e) => findxy(\"move\", e),false);\r\n    canvas.current.addEventListener(\"mousedown\",(e) => findxy(\"down\", e),false);\r\n    canvas.current.addEventListener(\"mouseup\", (e) => findxy(\"up\", e), false);\r\n    canvas.current.addEventListener(\"mouseout\", (e) => findxy(\"out\", e), false);\r\n  }, []);\r\n  function findxy(res, e) {\r\n    if (res === \"down\") {\r\n      prevX = currX;\r\n      prevY = currY;\r\n      currX = e.clientX - canvas.current.offsetLeft;\r\n      currY = e.clientY - canvas.current.offsetTop;\r\n\r\n      flag = true;\r\n      dot_flag = true;\r\n      if (dot_flag) {\r\n        ctx.current.beginPath();\r\n        ctx.current.fillStyle = x;\r\n        ctx.current.fillRect(currX, currY, 2, 2);\r\n        ctx.current.closePath();\r\n        dot_flag = false;\r\n      }\r\n    } else if (res === \"move\") {\r\n      if (flag) {\r\n        prevX = currX;\r\n        prevY = currY;\r\n        currX = e.clientX - canvas.current.offsetLeft;\r\n        currY = e.clientY - canvas.current.offsetTop;\r\n        draw();\r\n      }\r\n    } else if (res === \"up\" || res === \"out\") {\r\n      flag = false;\r\n    }\r\n  }\r\n\r\n  function draw() {\r\n    ctx.current.beginPath();\r\n    ctx.current.moveTo(prevX, prevY);\r\n    ctx.current.lineTo(currX, currY);\r\n    ctx.current.strokeStyle = x;\r\n    ctx.current.lineWidth = y;\r\n    ctx.current.stroke();\r\n    ctx.current.closePath();\r\n  }\r\n\r\n  ////////////////////////////////////WIDGET FUNCTIONS/////////////////////////////////////////////////////\r\n  const erase=()=> {ctx.current.clearRect(0, 0, canvas.current.width, canvas.current.height) }\r\n\r\n  const color=(color) =>{\r\n    switch (color) {\r\n        case \"green\":\r\n            x = \"green\";\r\n            break;\r\n        case \"blue\":\r\n            x = \"blue\";\r\n            break;\r\n        case \"red\":\r\n            x = \"red\";\r\n            break;\r\n        case \"yellow\":\r\n            x = \"yellow\";\r\n            break;\r\n        case \"orange\":\r\n            x = \"orange\";\r\n            break;\r\n        case \"black\":\r\n            x = \"black\";\r\n            break;\r\n        case \"white\":\r\n            x = \"white\";\r\n            break;\r\n    }\r\n    if (x == \"white\") y = 14;\r\n    else y = 2;\r\n\r\n}\r\n\r\n  ///////////////////////////////////////////WIDGET///////////////////////////////////////////////\r\n  return (\r\n    <Box\r\n      className=\"WhiteBoard\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      bgcolor=\"white\"\r\n      color=\"black\"\r\n    >\r\n\r\n       <Box  position=\"absolute\" right=\"0\" margin=\"1em 1.5em\">\r\n       {/* <Tooltip title=\"Pen\"><IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\"  onClick={()=>color(\"black\")}><BiPen/></IconButton></Tooltip> */}\r\n       {/* <Tooltip title=\"Eraser\"><IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\"  onClick={()=>color(\"white\")}><BiEraser/></IconButton></Tooltip> */}\r\n       <Tooltip title=\"Clear\"><IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\"  onClick={erase}><MdClear/></IconButton></Tooltip>\r\n      </Box>\r\n\r\n\r\n      <canvas ref={canvas}></canvas>\r\n     \r\n    </Box>\r\n  );\r\n}\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport io from \"socket.io-client\";\r\nimport \"../css/CreateRoom.css\";\r\nimport useDynamicRefs from \"use-dynamic-refs\";\r\nimport { Button, IconButton, Tooltip } from \"@material-ui/core\";\r\nimport { FaBorderAll, FaExpand } from \"react-icons/fa\";\r\nimport { FiMicOff, FiVideoOff } from \"react-icons/fi\";\r\nimport { CgScreenMirror } from \"react-icons/cg\";\r\nimport { BsFillMicFill, BsFillCameraVideoFill } from \"react-icons/bs\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport WhiteBoard from \"./WhiteBoard\";\r\nimport { MdClear } from \"react-icons/md\"; \r\n\r\n\r\nconst CreateRoom = ({ match }) => {\r\n  const roomId = match.params.roomId;\r\n\r\n  const localVideoRef = useRef();\r\n\r\n  const localStreamRef = useRef();\r\n  const screenShareStreamRef = useRef(null);\r\n  const socketRef = useRef();\r\n\r\n  const peerRef = useRef([]);\r\n  const senders = useRef([]);\r\n\r\n  const [getRef, setRef] = useDynamicRefs();\r\n\r\n  const [audio, setAudio] = React.useState(true);\r\n  const [video, setVideo] = React.useState(true);\r\n  const [onLive, setOnLive] = React.useState(false);\r\n  const [isShowingVideo, setIsShowingVideo] = useState(true);\r\n  const [newJoinee, setNewJoinee] = useState();\r\n\r\n  useEffect(() => {\r\n    navigator.mediaDevices\r\n      .getUserMedia({ video: true, audio: true })\r\n      .then((stream) => {\r\n        localVideoRef.current.srcObject = stream;\r\n        localStreamRef.current = stream;\r\n      })\r\n      .catch((err) => {\r\n        alert(`Error:${err}`);\r\n      });\r\n  }, []);\r\n\r\n  ///////////////////////////////////////SOCKET LISTENERS AND SENDERS ////////////////////////////\r\n  const goLive = () => {\r\n    socketRef.current = io.connect(\"/\");\r\n    socketRef.current.emit(\"create room\", roomId);\r\n    socketRef.current.on(\"offer\", handleReceiveOffer);\r\n    socketRef.current.on(\"ice-candidate\", (data) => {\r\n      const candidate = new RTCIceCandidate(data.val);\r\n      const peers = peerRef.current.filter(\r\n        (peer) => peer.userID === data.userID\r\n      );\r\n      if (peers.length !== 0) {\r\n        const peer = peers[0].peer;\r\n        peer\r\n          .addIceCandidate(candidate)\r\n          .then(() => {\r\n            console.log(\"Added\");\r\n          })\r\n          .catch((e) => {\r\n            console.log(`candidate error:${e}`);\r\n          });\r\n      }\r\n    });\r\n    socketRef.current.on(\"user left\", (joineeId) => {\r\n      const data = peerRef.current.filter((item) => item.userID !== joineeId);\r\n      peerRef.current = [...data];\r\n      setNewJoinee(joineeId + \"disconnected\");\r\n    });\r\n    setOnLive(true);\r\n  };\r\n\r\n  ///////////////////////////////////PEER CONNECTION SETUP/////////////////////////////////////\r\n  function handleReceiveOffer(joineeData) {\r\n    // console.log(`REMOTE OFFER`);\r\n    const peer = createPeer(joineeData.from);\r\n    const desc = new RTCSessionDescription(joineeData.sdp);\r\n    peer\r\n      .setRemoteDescription(desc)\r\n      .then(() => {\r\n        localStreamRef.current\r\n          .getTracks()\r\n          .forEach((track) => {\r\n            const mTrack = peer.addTrack(track, localStreamRef.current);\r\n            if(track.kind===\"video\"){\r\n            senders.current.push(mTrack);\r\n              if(screenShareStreamRef.current!=null){\r\n                mTrack.replaceTrack(screenShareStreamRef.current)\r\n              }\r\n            }           \r\n          });\r\n      })\r\n      .then(() => {\r\n        return peer.createAnswer();\r\n      })\r\n      .then((answer) => {\r\n        peer.setLocalDescription(answer);\r\n      })\r\n      .then(() => {\r\n        socketRef.current.emit(\"answer\", {\r\n          to: joineeData.from,\r\n          sdp: peer.localDescription,\r\n        });\r\n      });\r\n\r\n    peerRef.current.push({ userID: joineeData.from, peer });\r\n    setNewJoinee(joineeData.from);\r\n  }\r\n\r\n\r\n\r\n  function createPeer(userID) {\r\n    const configuration = {\r\n      iceServers: [\r\n        {\r\n          urls: [\r\n            \"stun:stun1.l.google.com:19302\",\r\n            \"stun:stun2.l.google.com:19302\",\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n    const peer = new RTCPeerConnection(configuration);\r\n    peer.onicecandidate = (e) => {\r\n      handleIceCandidate(e, userID);\r\n    };\r\n    peer.ontrack = (e) => {\r\n      handleTrack(e, userID);\r\n    };\r\n    peer.onsignalingstatechange = (e) => {\r\n      console.log(`SIGNAL STATE:${e.target.signalingState}`);\r\n    };\r\n    peer.onnegotiationneeded = handleNegotiation;\r\n    return peer;\r\n  }\r\n  function handleIceCandidate(e, joinee) {\r\n    if (e.candidate) {\r\n      socketRef.current.emit(\"ice-candidate\", {\r\n        to: joinee,\r\n        candidate: e.candidate,\r\n      });\r\n    }\r\n  }\r\n  function handleTrack(e, userID) {\r\n    getRef(userID).current.srcObject = e.streams[0];\r\n  }\r\n  function handleNegotiation() {\r\n    console.log(\"handleNegotiation\");\r\n  }\r\n\r\n  //////////////////////////////////////////////////WIDGET FUNCTION HANDLERS///////////////////////////////\r\n  const handleChange = (event) => {\r\n    const toggle = event.target.checked;\r\n    setIsShowingVideo(toggle);\r\n  };\r\n\r\n  const leaveRoom = () => {\r\n    socketRef.current.disconnect();\r\n    peerRef.current = [];\r\n    setNewJoinee(\"callEnd\");\r\n    setOnLive(false);\r\n  };\r\n\r\n  const handleMediaChange = (event) => {\r\n    if (event.target.name === \"audio\") {\r\n      localStreamRef.current.getAudioTracks()[0].enabled = event.target.checked;\r\n      setAudio(event.target.checked);\r\n    } else {\r\n      localStreamRef.current.getVideoTracks()[0].enabled = event.target.checked;\r\n      setVideo(event.target.checked);\r\n    }\r\n  };\r\n  const shareScreen=()=>{\r\n    navigator.mediaDevices.getDisplayMedia({cursor:true}).then(stream=>{\r\n      const screenTrack = stream.getTracks()[0];\r\n      screenShareStreamRef.current = screenTrack;\r\n      screenTrack.onended = ()=>{\r\n        screenShareStreamRef.current = null;\r\n        senders.current.forEach(sender=>{\r\n          sender.replaceTrack(localStreamRef.current.getVideoTracks()[0])\r\n        })\r\n      }\r\n      if(peerRef.current.length!==0){\r\n        senders.current.forEach(sender=>{\r\n          sender.replaceTrack(screenTrack)\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  ///////////////////////////////////////////////////WIDGET////////////////////////////////////////////////////////////////\r\n  return (\r\n    <Box\r\n      width=\"100vw\"\r\n      height=\"100vh\"\r\n      bgcolor=\"black\"\r\n      className=\"createRoom\"\r\n      display=\"flex\"\r\n      flexDirection=\"column\"\r\n    >\r\n      {/* <Box\r\n        width=\"100%\"\r\n        color=\"white\"\r\n        position=\"absolute\"\r\n        bgcolor=\"rgb(25 25 25)\"\r\n      >\r\n        Top Banner\r\n      </Box> */}\r\n\r\n      {/* middle banner */}\r\n      <Box\r\n        width=\"100vw\"\r\n        height=\"100vh\"\r\n        color=\"white\"\r\n        flexGrow=\"1\"\r\n        paddingBottom=\"10vh\"\r\n      >\r\n        <Box\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          hidden={isShowingVideo}\r\n          bgcolor=\"white\"\r\n          color=\"black\"\r\n        >\r\n        <WhiteBoard></WhiteBoard>\r\n        </Box>\r\n\r\n        <Box\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          hidden={!isShowingVideo}\r\n          style={{ overflowY: \"scroll\" }}\r\n        >\r\n          <video\r\n            height=\"100%\"\r\n            muted\r\n            autoPlay\r\n            ref={localVideoRef}\r\n            className=\"MyVideo\"\r\n          ></video>\r\n          {peerRef.current.map((item) => (\r\n            <video\r\n              key={item.userID}\r\n              autoPlay\r\n              ref={setRef(item.userID)}\r\n              className=\"MyVideo\"\r\n            ></video>\r\n          ))}\r\n        </Box>\r\n      </Box>\r\n      {/* bottom banner */}\r\n      <Box\r\n        position=\"absolute\"\r\n        bottom=\"0\"\r\n        width=\"100%\"\r\n        height=\"10vh\"\r\n        color=\"white\"\r\n        padding=\"0em 1em 0.5em 1em\"\r\n        bgcolor=\"rgb(25 25 25)\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"space-between\"\r\n      >\r\n        <div>\r\n          <Checkbox\r\n            checked={isShowingVideo}\r\n            icon={<FaExpand color=\"white\" />}\r\n            checkedIcon={<FaBorderAll color=\"white\" />}\r\n            onChange={handleChange}\r\n          />\r\n\r\n          { \r\n<React.Fragment>\r\n\r\n\r\n\r\n<Tooltip title=\"Share screen\">\r\n  <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\"  onClick={shareScreen}>\r\n    <CgScreenMirror color=\"white\"/>\r\n    </IconButton></Tooltip>\r\n\r\n\r\n\r\n</React.Fragment> } \r\n        </div>\r\n\r\n        <div>\r\n          <Checkbox\r\n            checkedIcon={<BsFillMicFill color=\"white\" />}\r\n            icon={<FiMicOff color=\"white\" />}\r\n            checked={audio}\r\n            name=\"audio\"\r\n            onChange={handleMediaChange}\r\n          />\r\n\r\n          <Checkbox\r\n            checkedIcon={<BsFillCameraVideoFill color=\"white\" />}\r\n            icon={<FiVideoOff color=\"white\" />}\r\n            checked={video}\r\n            name=\"video\"\r\n            onChange={handleMediaChange}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          {onLive ? (\r\n            <Button\r\n              className=\"btn\"\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={leaveRoom}\r\n            >\r\n              LEAVE\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              className=\"btn\"\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={goLive}\r\n            >\r\n              Go live\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\nexport default CreateRoom;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport { FiMicOff, FiVideoOff } from \"react-icons/fi\";\r\nimport { BsFillMicFill, BsFillCameraVideoFill } from \"react-icons/bs\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport \"../css/JoinRoom.css\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst JoinRoom = ({ match }) => {\r\n  const roomId = match.params.roomId;\r\n\r\n  const localVideoRef = useRef();\r\n  const remoteVideoRef = useRef();\r\n\r\n  const localStreamRef = useRef();\r\n  const socketRef = useRef();\r\n  const peerRef = useRef();\r\n\r\n  const [audio, setAudio] = React.useState(true);\r\n  const [video, setVideo] = React.useState(true);\r\n  const [haveRemoteStream, setHaveRemoteStream] = React.useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    navigator.mediaDevices\r\n      .getUserMedia({ video: {\r\n        width:{max:640},\r\n        height:{max:480},\r\n      }, audio: true })\r\n      .then((stream) => {\r\n        localVideoRef.current.srcObject = stream;\r\n        localStreamRef.current = stream;\r\n        socketConfig();\r\n      })\r\n      .catch((err) => {\r\n        alert(`Error:${err}`);\r\n      });\r\n  }, []);\r\n\r\n\r\n  /////////////////////////////////////////////////////////SOCKET SERVER LISTENERS AND SENDERS /////////////////////////////////////\r\n  const socketConfig = () => {\r\n    socketRef.current = io.connect(\"/\");\r\n    socketRef.current.emit(\"join room\", roomId);\r\n    socketRef.current.on(\"hostId\", getOffer);\r\n    socketRef.current.on(\"answer\", handleReceiveAnswer);\r\n    socketRef.current.on(\"no room\", () => {\r\n      alert(\"No room exist\");\r\n    });\r\n    socketRef.current.on(\"host left\", () => setHaveRemoteStream(false) );\r\n\r\n    socketRef.current.on(\"ice-candidate\", (data) => {\r\n      const candidate = new RTCIceCandidate(data.val);\r\n      peerRef.current\r\n        .addIceCandidate(candidate)\r\n        .then(() => {\r\n          console.log(\"Added\");\r\n        })\r\n        .catch((e) => {\r\n          console.log(`candidate error:${e}`);\r\n        });\r\n    });\r\n  };\r\n\r\n  function getOffer(hostID) {\r\n    const configuration = {\r\n      iceServers: [\r\n        {\r\n          urls: [\r\n            \"stun:stun1.l.google.com:19302\",\r\n            \"stun:stun2.l.google.com:19302\",\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n    peerRef.current = new RTCPeerConnection(configuration);\r\n\r\n    localStreamRef.current.getTracks().forEach((track) => {\r\n      peerRef.current.addTrack(track, localStreamRef.current);\r\n    });\r\n\r\n    peerRef.current.onicecandidate = (e) => {\r\n      handleIceCandidate(e, hostID);\r\n    };\r\n    peerRef.current.ontrack = handleTrack;\r\n    peerRef.current.onnegotiationneeded = () => {\r\n      handleNegotiation(hostID);\r\n    };\r\n    peerRef.current.onsignalingstatechange = (e) => {\r\n      console.log(`SIGNAL STATE:${e.target.signalingState}`);\r\n    };\r\n  }\r\n\r\n\r\n  ////////////////////////////////////PEER CONNECTION CALLBACKS/////////////////////////////////////////////\r\n  function handleIceCandidate(e, host) {\r\n    if (e.candidate) {\r\n      const data = {\r\n        to: host,\r\n        candidate: e.candidate,\r\n      };\r\n      socketRef.current.emit(\"ice-candidate\", data);\r\n    }\r\n  }\r\n  function handleTrack(e) {\r\n    setHaveRemoteStream(true);\r\n    remoteVideoRef.current.srcObject = e.streams[0];\r\n  }\r\n\r\n  function handleNegotiation(hostid) {\r\n    // console.log(\"handleNegotiation\")\r\n    peerRef.current\r\n      .createOffer()\r\n      .then((offer) => {\r\n        peerRef.current.setLocalDescription(offer);\r\n      })\r\n      .then(() => {\r\n        const data = {\r\n          to: hostid,\r\n          sdp: peerRef.current.localDescription,\r\n        };\r\n        socketRef.current.emit(\"offer\", data);\r\n      })\r\n      .catch((e) => {\r\n        alert(`Error occured : ${e}`);\r\n      });\r\n  }\r\n\r\n  function handleReceiveAnswer(hostData) {\r\n    const desc = new RTCSessionDescription(hostData.sdp);\r\n    peerRef.current\r\n      .setRemoteDescription(desc)\r\n      .catch((e) => alert(`Error:${e}`));\r\n  }\r\n\r\n  /////////////////////////////////////////////////// FUNCTIONS /////////////////////////////////////////////////////\r\n\r\n  const handleChange = (event) => {\r\n    if (event.target.name === \"audio\") {\r\n      localStreamRef.current.getAudioTracks()[0].enabled = event.target.checked;\r\n      setAudio(event.target.checked);\r\n    } else {\r\n      localStreamRef.current.getVideoTracks()[0].enabled = event.target.checked;\r\n      setVideo(event.target.checked);\r\n    }\r\n  };\r\n\r\n  /////////////////////////////////////////////////// WIDGETS /////////////////////////////////////////////////////\r\n  const Loading = () => {\r\n    return (\r\n      <div className=\"loader\">\r\n        <CircularProgress />\r\n        <p>Connectng...</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  /////////////////////////////////////////////////// WIDGET /////////////////////////////////////////////////////\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      {haveRemoteStream || remoteVideoRef.current ? \"\" : <Loading />}\r\n\r\n      <div className=\"video-container\">\r\n        <video\r\n          muted\r\n          ref={localVideoRef}\r\n          autoPlay\r\n          hidden={haveRemoteStream}\r\n        ></video>\r\n        <video ref={remoteVideoRef} autoPlay hidden={!haveRemoteStream}></video>\r\n      </div>\r\n\r\n      <div className=\"toolbar\">\r\n        <div>\r\n          <Checkbox\r\n            checkedIcon={<BsFillMicFill color=\"white\" size=\"32\" />}\r\n            icon={<FiMicOff color=\"white\" size=\"32\" />}\r\n            checked={audio}\r\n            name=\"audio\"\r\n            onChange={handleChange}\r\n            inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n          />\r\n\r\n          <Checkbox\r\n            checkedIcon={<BsFillCameraVideoFill color=\"white\" size=\"32\" />}\r\n            icon={<FiVideoOff color=\"white\" size=\"32\" />}\r\n            checked={video}\r\n            name=\"video\"\r\n            onChange={handleChange}\r\n            inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n          />\r\n        </div>\r\n        {/* <Button className=\"btn\" variant=\"contained\" color=\"secondary\" >\r\n          LEAVE\r\n        </Button> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default JoinRoom;\r\n","import React from 'react';\nimport './App.css';\nimport {BrowserRouter,Switch,Route} from 'react-router-dom';\n\n//\nimport HomePage from  './components/HomePage'\nimport CreateRoom from  './components/CreateRoom'\nimport JoinRoom from  './components/JoinRoom'\n\nfunction App() {\n  return (\n    <React.Fragment>\n    <BrowserRouter>\n    <Switch>\n      <Route path=\"/\" exact component={HomePage}/>\n      <Route path=\"/room/:roomId\"  component={CreateRoom}/>\n      <Route path=\"/join/:roomId\" component={JoinRoom}/>\n    </Switch>\n    </BrowserRouter>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}